{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/navigation/MessagePopperButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popover, IconButton, AppBar, List, Divider, ListItem, ListItemText, Typography, Box, withStyles } from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = theme => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  divider: {\n    marginTop: -2\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  }\n});\n\nfunction MessagePopperButton(props) {\n  _s();\n\n  const {\n    classes,\n    messages\n  } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  const id = isOpen ? \"scroll-playground\" : null;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClick,\n      buttonRef: anchorEl,\n      \"aria-label\": \"Open Messages\",\n      \"aria-describedby\": id,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      disableScrollLock: true,\n      id: id,\n      open: isOpen,\n      anchorEl: anchorEl.current,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      classes: {\n        paper: classes.popoverPaper\n      },\n      onClose: handleClickAway,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"inherit\",\n        className: classes.noShadow,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          pt: 1,\n          pl: 2,\n          pb: 1,\n          pr: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classes.tabContainer,\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: \"You haven't received any messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : messages.map((element, index) => /*#__PURE__*/_jsxDEV(MessageListItem, {\n          message: element,\n          divider: index !== messages.length - 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessagePopperButton, \"IXqWtOhHzt/MLHwK7jVjWSx6iYo=\");\n\n_c = MessagePopperButton;\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MessagePopperButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagePopperButton\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/navigation/MessagePopperButton.js"],"names":["React","Fragment","useState","useRef","useCallback","PropTypes","Popover","IconButton","AppBar","List","Divider","ListItem","ListItemText","Typography","Box","withStyles","MessageIcon","MessageListItem","styles","theme","tabContainer","overflowY","maxHeight","popoverPaper","width","maxWidth","marginLeft","spacing","marginRight","breakpoints","down","divider","marginTop","noShadow","boxShadow","MessagePopperButton","props","classes","messages","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","id","current","vertical","horizontal","paper","length","map","element","index","propTypes","object","isRequired","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = (theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  divider: {\n    marginTop: -2,\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Messages\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        disableScrollLock\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Messages</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                You haven&apos;t received any messages yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n"]},"metadata":{},"sourceType":"module"}