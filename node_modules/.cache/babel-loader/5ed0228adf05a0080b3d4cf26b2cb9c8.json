{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/dashboard/AccountInformationArea.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Paper, Toolbar, ListItemText, ListItemSecondaryAction, ListItemIcon, Switch, Box, withStyles } from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: {\n    justifyContent: \"space-between\"\n  },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: {\n      transform: \"rotate(359deg)\"\n    },\n    to: {\n      transform: \"rotate(0deg)\"\n    }\n  },\n  spin: {\n    animation: \"$spin 2s infinite linear\"\n  },\n  listItemSecondaryAction: {\n    paddingRight: theme.spacing(1)\n  }\n});\n\nfunction AccountInformationArea(props) {\n  const {\n    classes,\n    toggleAccountActivation,\n    isAccountActivated\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Status\",\n            secondary: isAccountActivated ? \"Activated\" : \"Not activated\",\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(LoopIcon, {\n            className: classNames(isAccountActivated ? classes.spin : null, classes.scaleMinus)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        className: classes.listItemSecondaryAction,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          color: \"secondary\",\n          checked: isAccountActivated,\n          onClick: toggleAccountActivation,\n          inputProps: {\n            \"aria-label\": isAccountActivated ? \"Deactivate Account\" : \"Activate Account\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AccountInformationArea;\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AccountInformationArea);\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInformationArea\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/dashboard/AccountInformationArea.js"],"names":["React","PropTypes","classNames","Paper","Toolbar","ListItemText","ListItemSecondaryAction","ListItemIcon","Switch","Box","withStyles","LoopIcon","styles","theme","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","justifyContent","scaleMinus","transform","from","to","spin","animation","listItemSecondaryAction","paddingRight","spacing","AccountInformationArea","props","classes","toggleAccountActivation","isAccountActivated","propTypes","object","isRequired","func","bool","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Switch,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Status\"\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\n              className=\"mr-2\"\n            />\n          </Box>\n          <ListItemIcon>\n            <LoopIcon\n              className={classNames(\n                isAccountActivated ? classes.spin : null,\n                classes.scaleMinus\n              )}\n            />\n          </ListItemIcon>\n        </Box>\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n          <Switch\n            color=\"secondary\"\n            checked={isAccountActivated}\n            onClick={toggleAccountActivation}\n            inputProps={{\n              \"aria-label\": isAccountActivated\n                ? \"Deactivate Account\"\n                : \"Activate Account\"\n            }}\n          />\n        </ListItemSecondaryAction>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n"]},"metadata":{},"sourceType":"module"}