{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/subscription/stripe/StripeTextField.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TextField, withTheme } from \"@material-ui/core\";\n\nfunction MyInputComponent(props) {\n  _s();\n\n  const {\n    component: Component,\n    inputRef,\n    ...other\n  } = props; // implement `InputElement` interface\n\n  React.useImperativeHandle(inputRef, () => ({\n    focus: () => {// logic to focus the rendered component from 3rd party belongs here\n    } // hiding the value e.g. react-stripe-elements\n\n  })); // `Component` will be your `SomeThirdPartyComponent` from below\n\n  return /*#__PURE__*/_jsxDEV(Component, { ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MyInputComponent, \"PYzlZ2AGFM0KxtNOGoZVRb5EOEw=\", false, function () {\n  return [React.useImperativeHandle];\n});\n\n_c = MyInputComponent;\n\nfunction StripeTextField(props) {\n  const {\n    stripeOptions,\n    StripeElement,\n    select,\n    theme,\n    ...rest\n  } = props;\n  const options = {\n    style: {\n      base: { ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary\n        }\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main\n      }\n    },\n    ...stripeOptions\n  };\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      component: StripeElement,\n      options: options\n    },\n    InputProps: {\n      inputComponent: MyInputComponent\n    },\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StripeTextField;\nexport default _c3 = withTheme(StripeTextField);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyInputComponent\");\n$RefreshReg$(_c2, \"StripeTextField\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/subscription/stripe/StripeTextField.js"],"names":["React","TextField","withTheme","MyInputComponent","props","component","Component","inputRef","other","useImperativeHandle","focus","StripeTextField","stripeOptions","StripeElement","select","theme","rest","options","style","base","typography","body1","color","palette","text","primary","fontSize","fontSmoothing","secondary","invalid","iconColor","error","main","shrink","inputComponent"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,mBAArC;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,QAAxB;AAAkC,OAAGC;AAArC,MAA+CJ,KAArD,CAD+B,CAG/B;;AACAJ,EAAAA,KAAK,CAACS,mBAAN,CAA0BF,QAA1B,EAAoC,OAAO;AACzCG,IAAAA,KAAK,EAAE,MAAM,CACX;AACD,KAHwC,CAIzC;;AAJyC,GAAP,CAApC,EAJ+B,CAW/B;;AACA,sBAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAbQL,gB;UAIPH,KAAK,CAACS,mB;;;KAJCN,gB;;AAeT,SAASQ,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,QAAM;AAAEQ,IAAAA,aAAF;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA,MAAhC;AAAwCC,IAAAA,KAAxC;AAA+C,OAAGC;AAAlD,MAA2DZ,KAAjE;AACA,QAAMa,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,EACJ,GAAGJ,KAAK,CAACK,UAAN,CAAiBC,KADhB;AAEJC,QAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,OAFtB;AAGJC,QAAAA,QAAQ,EAAE,MAHN;AAIJC,QAAAA,aAAa,EAAE,aAJX;AAKJ,yBAAiB;AACfL,UAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBI;AADX;AALb,OADD;AAULC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAEf,KAAK,CAACQ,OAAN,CAAcQ,KAAd,CAAoBC,IADxB;AAEPV,QAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcQ,KAAd,CAAoBC;AAFpB;AAVJ,KADO;AAgBd,OAAGpB;AAhBW,GAAhB;AAkBA,sBACE,QAAC,SAAD;AACE,IAAA,eAAe,EAAE;AACfqB,MAAAA,MAAM,EAAE;AADO,KADnB;AAIE,IAAA,UAAU,EAAE;AAAE5B,MAAAA,SAAS,EAAEQ,aAAb;AAA4BI,MAAAA,OAAO,EAAEA;AAArC,KAJd;AAKE,IAAA,UAAU,EAAE;AACViB,MAAAA,cAAc,EAAE/B;AADN,KALd;AAAA,OAQMa;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;MAhCQL,e;AAkCT,qBAAeT,SAAS,CAACS,eAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport { TextField, withTheme } from \"@material-ui/core\";\n\nfunction MyInputComponent(props) {\n  const { component: Component, inputRef, ...other } = props;\n\n  // implement `InputElement` interface\n  React.useImperativeHandle(inputRef, () => ({\n    focus: () => {\n      // logic to focus the rendered component from 3rd party belongs here\n    }\n    // hiding the value e.g. react-stripe-elements\n  }));\n\n  // `Component` will be your `SomeThirdPartyComponent` from below\n  return <Component {...other} />;\n}\n\nfunction StripeTextField(props) {\n  const { stripeOptions, StripeElement, select, theme, ...rest } = props;\n  const options = {\n    style: {\n      base: {\n        ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary\n        }\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main\n      }\n    },\n    ...stripeOptions\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true\n      }}\n      inputProps={{ component: StripeElement, options: options }}\n      InputProps={{\n        inputComponent: MyInputComponent\n      }}\n      {...rest}\n    />\n  );\n}\n\nexport default withTheme(StripeTextField);\n"]},"metadata":{},"sourceType":"module"}