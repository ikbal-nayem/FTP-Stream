{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/register_login/ChangePasswordDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Dialog, DialogContent, DialogActions, Button, Typography, withStyles } from \"@material-ui/core\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n  dialogActions: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  }\n});\n\nfunction ChangePassword(props) {\n  _s();\n\n  const {\n    onClose,\n    classes,\n    setLoginStatus\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const sendPasswordEmail = useCallback(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setLoginStatus(\"verificationEmailSend\");\n      setIsLoading(false);\n      onClose();\n    }, 1500);\n  }, [setIsLoading, setLoginStatus, onClose]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    hideBackdrop: true,\n    onClose: onClose,\n    disableBackdropClick: isLoading,\n    disableEscapeKeyDown: isLoading,\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        sendPasswordEmail();\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        className: classes.dialogContent,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          paragraph: true,\n          children: \"Enter your email address below and we will send you instructions on how to reset your password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"dense\",\n          required: true,\n          fullWidth: true,\n          label: \"Email Address\",\n          autoFocus: true,\n          type: \"email\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: classes.dialogActions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: isLoading,\n          children: [\"Reset password\", isLoading && /*#__PURE__*/_jsxDEV(ButtonCircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"MNFDdbsqJiBSf/3I7Eu65JDa4Aw=\");\n\n_c = ChangePassword;\nChangePassword.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  setLoginStatus: PropTypes.func.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/register_login/ChangePasswordDialog.js"],"names":["React","useState","useCallback","PropTypes","TextField","Dialog","DialogContent","DialogActions","Button","Typography","withStyles","ButtonCircularProgress","styles","theme","dialogContent","paddingTop","spacing","dialogActions","paddingBottom","paddingRight","ChangePassword","props","onClose","classes","setLoginStatus","isLoading","setIsLoading","sendPasswordEmail","setTimeout","e","preventDefault","propTypes","func","isRequired","object","withTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TextField,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n  },\n  dialogActions: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n});\n\nfunction ChangePassword(props) {\n  const { onClose, classes, setLoginStatus } = props;\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendPasswordEmail = useCallback(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setLoginStatus(\"verificationEmailSend\");\n      setIsLoading(false);\n      onClose();\n    }, 1500);\n  }, [setIsLoading, setLoginStatus, onClose]);\n\n  return (\n    <Dialog\n      open\n      hideBackdrop\n      onClose={onClose}\n      disableBackdropClick={isLoading}\n      disableEscapeKeyDown={isLoading}\n      maxWidth=\"xs\"\n    >\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          sendPasswordEmail();\n        }}\n      >\n        <DialogContent className={classes.dialogContent}>\n          <Typography paragraph>\n            Enter your email address below and we will send you instructions on\n            how to reset your password.\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            autoFocus\n            type=\"email\"\n            autoComplete=\"off\"\n          />\n        </DialogContent>\n        <DialogActions className={classes.dialogActions}>\n          <Button onClick={onClose} disabled={isLoading}>\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={isLoading}\n          >\n            Reset password\n            {isLoading && <ButtonCircularProgress />}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nChangePassword.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  setLoginStatus: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}