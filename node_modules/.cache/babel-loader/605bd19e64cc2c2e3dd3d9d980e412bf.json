{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/subscription/stripe/StripeIBANForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@material-ui/core\";\nimport StripeTextField from \"./StripeTextField\";\nimport { IbanElement } from \"@stripe/react-stripe-js\";\n\nfunction StripeIBANForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName,\n    email,\n    setEmail\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 8,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"none\",\n        required: true,\n        label: \"Your Name\",\n        value: name,\n        onChange: event => {\n          setName(event.target.value);\n        },\n        fullWidth: true,\n        autoFocus: true,\n        autoComplete: \"off\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        value: amount,\n        onChange: event => {\n          onAmountChange(parseInt(event.target.value));\n        },\n        error: amountError ? true : false,\n        helperText: amountError,\n        variant: \"outlined\",\n        fullWidth: true,\n        type: \"number\",\n        margin: \"none\",\n        label: \"Amount\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        variant: \"outlined\",\n        fullWidth: true,\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n        },\n        type: \"email\",\n        margin: \"none\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(StripeTextField, {\n        margin: \"none\",\n        variant: \"outlined\",\n        fullWidth: true,\n        label: \"IBAN\",\n        error: stripeError ? true : false,\n        helperText: stripeError,\n        required: true,\n        StripeElement: IbanElement,\n        stripeOptions: {\n          supportedCountries: [\"SEPA\"]\n        },\n        onChange: () => {\n          if (stripeError) {\n            setStripeError(\"\");\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = StripeIBANForm;\nStripeIBANForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired\n};\nexport default StripeIBANForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeIBANForm\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/subscription/stripe/StripeIBANForm.js"],"names":["React","PropTypes","TextField","Grid","InputAdornment","StripeTextField","IbanElement","StripeIBANForm","props","stripeError","setStripeError","amount","amountError","onAmountChange","name","setName","email","setEmail","event","target","value","parseInt","startAdornment","supportedCountries","propTypes","string","isRequired","func","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@material-ui/core\";\nimport StripeTextField from \"./StripeTextField\";\nimport { IbanElement } from \"@stripe/react-stripe-js\";\n\nfunction StripeIBANForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName,\n    email,\n    setEmail\n  } = props;\n  return (\n    <Grid container spacing={2} justify=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          required\n          variant=\"outlined\"\n          fullWidth\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value);\n          }}\n          type=\"email\"\n          margin=\"none\"\n          label=\"Email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          variant=\"outlined\"\n          fullWidth\n          label=\"IBAN\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          required\n          StripeElement={IbanElement}\n          stripeOptions={{ supportedCountries: [\"SEPA\"] }}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeIBANForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired\n};\n\nexport default StripeIBANForm;\n"]},"metadata":{},"sourceType":"module"}