{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/shared/components/NavigationDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemIcon, ListItemText, Drawer, withStyles, IconButton, Typography, withWidth, isWidthUp, Toolbar } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  _s();\n\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"temporary\",\n    open: open,\n    onClose: onClose,\n    anchor: anchor,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.headSection,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          paddingTop: theme.spacing(0),\n          paddingBottom: theme.spacing(0),\n          height: \"100%\",\n          justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n        },\n        disableGutters: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n          className: classes.closeIcon,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onClose,\n            \"aria-label\": \"Close Navigation\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.blackList,\n      children: menuItems.map(element => {\n        if (element.link) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: element.link,\n            className: classes.noDecoration,\n            onClick: onClose,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: selectedItem === element.name\n              /**\n               * We disable ripple as it will make a weird animation\n               * with primary and secondary color\n               */\n              ,\n              disableRipple: true,\n              disableTouchRipple: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: element.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  className: \"text-white\",\n                  children: element.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, element.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: element.onClick,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: element.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              className: \"text-white\",\n              children: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, element.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavigationDrawer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NavigationDrawer;\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\nexport default withWidth()(withStyles(styles, {\n  withTheme: true\n})(NavigationDrawer));\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationDrawer\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/shared/components/NavigationDrawer.js"],"names":["React","useEffect","PropTypes","Link","List","ListItem","ListItemIcon","ListItemText","Drawer","withStyles","IconButton","Typography","withWidth","isWidthUp","Toolbar","CloseIcon","styles","theme","closeIcon","marginRight","spacing","headSection","width","blackList","backgroundColor","palette","common","black","height","noDecoration","textDecoration","NavigationDrawer","props","open","onClose","anchor","classes","menuItems","selectedItem","window","onresize","paddingTop","paddingBottom","justifyContent","map","element","link","name","icon","onClick","propTypes","string","isRequired","object","bool","func","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n"]},"metadata":{},"sourceType":"module"}