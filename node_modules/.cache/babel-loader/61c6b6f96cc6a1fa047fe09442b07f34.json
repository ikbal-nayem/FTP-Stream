{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostContent from \"./PostContent\";\nimport AddPost from \"./AddPost\";\n\nfunction Posts(props) {\n  _s();\n\n  const {\n    selectPosts,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n    posts,\n    setPosts\n  } = props;\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\n  const openAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(true);\n  }, [setIsAddPostPaperOpen]);\n  const closeAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(false);\n  }, [setIsAddPostPaperOpen]);\n  useEffect(() => {\n    selectPosts();\n  }, [selectPosts]);\n\n  if (isAddPostPaperOpen) {\n    return /*#__PURE__*/_jsxDEV(AddPost, {\n      onClose: closeAddPostModal,\n      EmojiTextArea: EmojiTextArea,\n      ImageCropper: ImageCropper,\n      Dropzone: Dropzone,\n      DateTimePicker: DateTimePicker,\n      pushMessageToSnackbar: pushMessageToSnackbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostContent, {\n    openAddPostModal: openAddPostModal,\n    posts: posts,\n    setPosts: setPosts,\n    pushMessageToSnackbar: pushMessageToSnackbar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Posts, \"VE9sQvj1mBOG7q7h6VO5mMyS7k8=\");\n\n_c = Posts;\nPosts.propTypes = {\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectPosts: PropTypes.func.isRequired\n};\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/posts/Posts.js"],"names":["React","useState","useCallback","useEffect","PropTypes","PostContent","AddPost","Posts","props","selectPosts","EmojiTextArea","ImageCropper","Dropzone","DateTimePicker","pushMessageToSnackbar","posts","setPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","openAddPostModal","closeAddPostModal","propTypes","elementType","arrayOf","object","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,qBANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAUA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMkB,gBAAgB,GAAGjB,WAAW,CAAC,MAAM;AACzCgB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFmC,EAEjC,CAACA,qBAAD,CAFiC,CAApC;AAIA,QAAME,iBAAiB,GAAGlB,WAAW,CAAC,MAAM;AAC1CgB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAFoC,EAElC,CAACA,qBAAD,CAFkC,CAArC;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIQ,kBAAJ,EAAwB;AACtB,wBAAO,QAAC,OAAD;AACL,MAAA,OAAO,EAAEG,iBADJ;AAEL,MAAA,aAAa,EAAEV,aAFV;AAGL,MAAA,YAAY,EAAEC,YAHT;AAIL,MAAA,QAAQ,EAAEC,QAJL;AAKL,MAAA,cAAc,EAAEC,cALX;AAML,MAAA,qBAAqB,EAAEC;AANlB;AAAA;AAAA;AAAA;AAAA,YAAP;AAQD;;AACD,sBAAO,QAAC,WAAD;AACL,IAAA,gBAAgB,EAAEK,gBADb;AAEL,IAAA,KAAK,EAAEJ,KAFF;AAGL,IAAA,QAAQ,EAAEC,QAHL;AAIL,IAAA,qBAAqB,EAAEF;AAJlB;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD;;GAzCQP,K;;KAAAA,K;AA2CTA,KAAK,CAACc,SAAN,GAAkB;AAChBX,EAAAA,aAAa,EAAEN,SAAS,CAACkB,WADT;AAEhBX,EAAAA,YAAY,EAAEP,SAAS,CAACkB,WAFR;AAGhBV,EAAAA,QAAQ,EAAER,SAAS,CAACkB,WAHJ;AAIhBT,EAAAA,cAAc,EAAET,SAAS,CAACkB,WAJV;AAKhBP,EAAAA,KAAK,EAAEX,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,MAA5B,EAAoCC,UAL3B;AAMhBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,IAAV,CAAeD,UANT;AAOhBX,EAAAA,qBAAqB,EAAEV,SAAS,CAACsB,IAPjB;AAQhBjB,EAAAA,WAAW,EAAEL,SAAS,CAACsB,IAAV,CAAeD;AARZ,CAAlB;AAWA,eAAelB,KAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostContent from \"./PostContent\";\nimport AddPost from \"./AddPost\";\n\nfunction Posts(props) {\n  const {\n    selectPosts,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n    posts,\n    setPosts,\n  } = props;\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\n\n  const openAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(true);\n  }, [setIsAddPostPaperOpen]);\n\n  const closeAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(false);\n  }, [setIsAddPostPaperOpen]);\n\n  useEffect(() => {\n    selectPosts();\n  }, [selectPosts]);\n\n  if (isAddPostPaperOpen) {\n    return <AddPost\n      onClose={closeAddPostModal}\n      EmojiTextArea={EmojiTextArea}\n      ImageCropper={ImageCropper}\n      Dropzone={Dropzone}\n      DateTimePicker={DateTimePicker}\n      pushMessageToSnackbar={pushMessageToSnackbar}\n    />\n  }\n  return <PostContent\n    openAddPostModal={openAddPostModal}\n    posts={posts}\n    setPosts={setPosts}\n    pushMessageToSnackbar={pushMessageToSnackbar}\n  />\n}\n\nPosts.propTypes = {\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectPosts: PropTypes.func.isRequired,\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}