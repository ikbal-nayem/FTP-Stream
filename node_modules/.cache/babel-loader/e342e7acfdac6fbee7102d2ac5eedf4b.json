{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/Search/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { SearchRounded } from \"@material-ui/icons\";\nimport './style.css';\nimport RenderItem from './RenderItem';\nimport axios from '../../../shared/util';\nexport default _c2 = /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  const [query, setQuery] = React.useState('');\n  const [result, setResult] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(`/search/multi?query=${query}`).then(resp => setResult(resp.data.results));\n  }, [query, setResult]);\n  console.log(result);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      style: {\n        width: 250,\n        marginRight: 50\n      },\n      disableClearable: true,\n      options: result,\n      groupBy: option => option.media_type,\n      getOptionLabel: option => option.title ? option.title : option.name,\n      filterOptions: op => op.filter(val => val.media_type !== 'person'),\n      renderOption: option => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-truncate\",\n        children: option.title ? option.title : option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }, this),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        id: \"search-box\",\n        placeholder: \"Search...\",\n        size: \"small\",\n        fullWidth: true,\n        onChange: e => setQuery(e.target.value),\n        className: \"px-2 pt-1 bg-light rounded shadow\",\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          className: \"p-0\",\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchRounded, {\n            className: \"p-0\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 10\n        }, this),\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}, \"AhM3ek9sp2vOiyfjzwwfON85W9A=\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$React.memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/Search/index.jsx"],"names":["React","InputAdornment","TextField","Autocomplete","SearchRounded","RenderItem","axios","memo","query","setQuery","useState","result","setResult","useEffect","get","then","resp","data","results","console","log","width","marginRight","option","media_type","title","name","op","filter","val","params","e","target","value","InputProps","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,cADD,EAECC,SAFD,QAGO,mBAHP;AAIA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAIA,kCAAeN,KAAK,CAACO,IAAN,SAAW,MAAI;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAA5B;AAEAV,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAI;AAClBP,IAAAA,KAAK,CAACQ,GAAN,CAAW,uBAAsBN,KAAM,EAAvC,EACGO,IADH,CACQC,IAAI,IAAIJ,SAAS,CAACI,IAAI,CAACC,IAAL,CAAUC,OAAX,CADzB;AAED,GAHD,EAGG,CAACV,KAAD,EAAQI,SAAR,CAHH;AAKAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAGD,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,2BACC,QAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,KAAK,EAAE;AAACU,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,WAAW,EAAE;AAA1B,OAFR;AAGC,MAAA,gBAAgB,MAHjB;AAIK,MAAA,OAAO,EAAEX,MAJd;AAKK,MAAA,OAAO,EAAGY,MAAD,IAAYA,MAAM,CAACC,UALjC;AAMK,MAAA,cAAc,EAAGD,MAAD,IAAYA,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAtB,GAA8BF,MAAM,CAACG,IANtE;AAOK,MAAA,aAAa,EAAEC,EAAE,IAAIA,EAAE,CAACC,MAAH,CAAUC,GAAG,IAAIA,GAAG,CAACL,UAAJ,KAAmB,QAApC,CAP1B;AAQK,MAAA,YAAY,EAAGD,MAAD,iBAAY;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiCA,MAAM,CAACE,KAAP,GAAaF,MAAM,CAACE,KAApB,GAA0BF,MAAM,CAACG;AAAlE;AAAA;AAAA;AAAA;AAAA,cAR/B;AASK,MAAA,WAAW,EAAGI,MAAD,iBACX,QAAC,SAAD,OACKA,MADL;AAEE,QAAA,EAAE,EAAC,YAFL;AAGH,QAAA,WAAW,EAAC,WAHT;AAIH,QAAA,IAAI,EAAC,OAJF;AAKH,QAAA,SAAS,MALN;AAME,QAAA,QAAQ,EAAEC,CAAC,IAAItB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CANzB;AAOH,QAAA,SAAS,EAAC,mCAPP;AAQH,QAAA,cAAc,eACZ,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAgC,UAAA,QAAQ,EAAC,OAAzC;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC,KAAzB;AAA+B,YAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATC;AAaH,QAAA,UAAU,EAAE,EAAE,GAAGH,MAAM,CAACI,UAAZ;AAAwBC,UAAAA,IAAI,EAAE;AAA9B;AAbT;AAAA;AAAA;AAAA;AAAA;AAVP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CA3Cc,kCAAf","sourcesContent":["import React from 'react';\nimport {\n\tInputAdornment,\n\tTextField,\n} from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {SearchRounded} from \"@material-ui/icons\"\nimport './style.css';\nimport RenderItem from './RenderItem';\nimport axios from '../../../shared/util';\n\n\n\nexport default React.memo(()=>{\n  const [query, setQuery] = React.useState('')\n  const [result, setResult] = React.useState([])\n\n  React.useEffect(()=>{\n    axios.get(`/search/multi?query=${query}`)\n      .then(resp => setResult(resp.data.results))\n  }, [query, setResult])\n\n  console.log(result)\n\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<Autocomplete\n\t\t\t\tfreeSolo\n\t\t\t\tstyle={{width: 250, marginRight: 50}}\n\t\t\t\tdisableClearable\n        options={result}\n        groupBy={(option) => option.media_type}\n        getOptionLabel={(option) => option.title ? option.title : option.name}\n        filterOptions={op => op.filter(val => val.media_type !== 'person')}\n        renderOption={(option) => <span className=\"text-truncate\">{option.title?option.title:option.name}</span>}\n        renderInput={(params) => (\n          <TextField\n          \t{...params}\n            id=\"search-box\"\n\t\t\t\t\t  placeholder=\"Search...\"\n\t\t\t\t\t  size=\"small\"\n\t\t\t\t\t  fullWidth\n            onChange={e => setQuery(e.target.value)}\n\t\t\t\t\t  className=\"px-2 pt-1 bg-light rounded shadow\"\n\t\t\t\t\t  startAdornment={\n\t\t\t\t\t    <InputAdornment className=\"p-0\" position=\"start\">\n\t\t\t\t\t      <SearchRounded className=\"p-0\" color=\"primary\"/>\n\t\t\t\t\t    </InputAdornment>\n\t\t\t\t\t  }\n\t\t\t\t\t  InputProps={{ ...params.InputProps, type: 'search'}}\n\t\t\t\t\t/>\n        )}\n\t\t\t/>\n\t\t</React.Fragment>\n\t)\n})\n\n"]},"metadata":{},"sourceType":"module"}