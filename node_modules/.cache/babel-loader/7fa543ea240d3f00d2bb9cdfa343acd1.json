{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/navigation/NavBar.js\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Button, Hidden, IconButton, withStyles } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\nimport SearchBox from '../Search';\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuButtonText: {\n    fontSize: theme.typography.body1.fontSize,\n    fontWeight: theme.typography.h6.fontWeight\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavBar(props) {\n  const {\n    classes,\n    openRegisterDialog,\n    openLoginDialog,\n    handleMobileDrawerOpen,\n    handleMobileDrawerClose,\n    mobileDrawerOpen,\n    selectedTab\n  } = props;\n  const menuItems = [{\n    name: \"Register\",\n    onClick: openRegisterDialog,\n    icon: /*#__PURE__*/_jsxDEV(HowToRegIcon, {\n      className: \"text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, {\n    name: \"Login\",\n    onClick: openLoginDialog,\n    icon: /*#__PURE__*/_jsxDEV(LockOpenIcon, {\n      className: \"text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              className: classes.brandText,\n              display: \"inline\",\n              color: \"primary\",\n              children: \"FTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              className: classes.brandText,\n              display: \"inline\",\n              color: \"secondary\",\n              children: \"Stream\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.menuButton,\n              onClick: handleMobileDrawerOpen,\n              \"aria-label\": \"Open Navigation\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            smDown: true,\n            children: [/*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), menuItems.map(element => {\n              if (element.link) {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: element.link,\n                  className: classes.noDecoration,\n                  onClick: handleMobileDrawerClose,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    size: \"small\",\n                    className: \"text-capitalize\",\n                    classes: {\n                      text: classes.menuButtonText\n                    },\n                    children: element.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)\n                }, element.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this);\n              }\n\n              return /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                size: \"small\",\n                className: \"text-capitalize\",\n                onClick: element.onClick,\n                classes: {\n                  text: classes.menuButtonText\n                },\n                children: element.name\n              }, element.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationDrawer, {\n      menuItems: menuItems,\n      anchor: \"right\",\n      open: mobileDrawerOpen,\n      selectedItem: selectedTab,\n      onClose: handleMobileDrawerClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavBar;\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMobileDrawerOpen: PropTypes.func,\n  handleMobileDrawerClose: PropTypes.func,\n  mobileDrawerOpen: PropTypes.bool,\n  selectedTab: PropTypes.string,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openLoginDialog: PropTypes.func.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})( /*#__PURE__*/memo(NavBar));\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/navigation/NavBar.js"],"names":["React","memo","PropTypes","Link","AppBar","Toolbar","Typography","Button","Hidden","IconButton","withStyles","MenuIcon","HowToRegIcon","LockOpenIcon","NavigationDrawer","SearchBox","styles","theme","appBar","boxShadow","shadows","backgroundColor","palette","common","white","toolbar","display","justifyContent","menuButtonText","fontSize","typography","body1","fontWeight","h6","brandText","fontFamily","noDecoration","textDecoration","NavBar","props","classes","openRegisterDialog","openLoginDialog","handleMobileDrawerOpen","handleMobileDrawerClose","mobileDrawerOpen","selectedTab","menuItems","name","onClick","icon","root","menuButton","map","element","link","text","propTypes","object","isRequired","func","bool","string","withTheme"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Hidden,\n  IconButton,\n  withStyles,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\nimport SearchBox from '../Search';\n\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuButtonText: {\n    fontSize: theme.typography.body1.fontSize,\n    fontWeight: theme.typography.h6.fontWeight\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\n\nfunction NavBar(props) {\n  const {\n    classes,\n    openRegisterDialog,\n    openLoginDialog,\n    handleMobileDrawerOpen,\n    handleMobileDrawerClose,\n    mobileDrawerOpen,\n    selectedTab\n  } = props;\n\n  const menuItems = [\n    {\n      name: \"Register\",\n      onClick: openRegisterDialog,\n      icon: <HowToRegIcon className=\"text-white\" />\n    },\n    {\n      name: \"Login\",\n      onClick: openLoginDialog,\n      icon: <LockOpenIcon className=\"text-white\" />\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Link to=\"/\" style={{textDecoration: 'none'}}>\n            <div>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                FTP\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                Stream\n              </Typography>\n            </div>\n          </Link>\n          <div className=\"d-flex\">\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                onClick={handleMobileDrawerOpen}\n                aria-label=\"Open Navigation\"\n              >\n                <MenuIcon color=\"primary\" />\n              </IconButton>\n            </Hidden>\n            <Hidden smDown>\n              \n              <SearchBox/>\n\n              {menuItems.map(element => {\n                if (element.link) {\n                  return (\n                    <Link\n                      key={element.name}\n                      to={element.link}\n                      className={classes.noDecoration}\n                      onClick={handleMobileDrawerClose}\n                    >\n                      <Button\n                        color=\"secondary\"\n                        size=\"small\"\n                        className=\"text-capitalize\"\n                        classes={{ text: classes.menuButtonText }}\n                      >\n                        {element.name}\n                      </Button>\n                    </Link>\n                  );\n                }\n                return (\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    className=\"text-capitalize\"\n                    onClick={element.onClick}\n                    classes={{ text: classes.menuButtonText }}\n                    key={element.name}\n                  >\n                    {element.name}\n                  </Button>\n                );\n              })}\n            </Hidden>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <NavigationDrawer\n        menuItems={menuItems}\n        anchor=\"right\"\n        open={mobileDrawerOpen}\n        selectedItem={selectedTab}\n        onClose={handleMobileDrawerClose}\n      />\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMobileDrawerOpen: PropTypes.func,\n  handleMobileDrawerClose: PropTypes.func,\n  mobileDrawerOpen: PropTypes.bool,\n  selectedTab: PropTypes.string,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openLoginDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(NavBar));\n"]},"metadata":{},"sourceType":"module"}