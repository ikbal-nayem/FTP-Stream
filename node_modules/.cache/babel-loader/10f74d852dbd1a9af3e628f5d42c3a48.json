{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/register_login/LoginDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\nimport { TextField, Button, Checkbox, Typography, FormControlLabel, withStyles } from \"@material-ui/core\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\n\nconst styles = theme => ({\n  forgotPassword: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n    \"&:enabled:hover\": {\n      color: theme.palette.primary.dark\n    },\n    \"&:enabled:focus\": {\n      color: theme.palette.primary.dark\n    }\n  },\n  disabledText: {\n    cursor: \"auto\",\n    color: theme.palette.text.disabled\n  },\n  formControlLabel: {\n    marginRight: 0\n  }\n});\n\nfunction LoginDialog(props) {\n  _s();\n\n  const {\n    setStatus,\n    history,\n    classes,\n    onClose,\n    openChangePasswordDialog,\n    status\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const loginEmail = useRef();\n  const loginPassword = useRef();\n  const login = useCallback(() => {\n    setIsLoading(true);\n    setStatus(null);\n\n    if (loginEmail.current.value !== \"test@web.com\") {\n      setTimeout(() => {\n        setStatus(\"invalidEmail\");\n        setIsLoading(false);\n      }, 1500);\n    } else if (loginPassword.current.value !== \"HaRzwc\") {\n      setTimeout(() => {\n        setStatus(\"invalidPassword\");\n        setIsLoading(false);\n      }, 1500);\n    } else {\n      setTimeout(() => {\n        history.push(\"/c/dashboard\");\n      }, 150);\n    }\n  }, [setIsLoading, loginEmail, loginPassword, history, setStatus]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormDialog, {\n      open: true,\n      onClose: onClose,\n      loading: isLoading,\n      onFormSubmit: e => {\n        e.preventDefault();\n        login();\n      },\n      hideBackdrop: true,\n      headline: \"Login\",\n      content: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          error: status === \"invalidEmail\",\n          required: true,\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          label: \"Email Address\",\n          inputRef: loginEmail,\n          autoFocus: true,\n          autoComplete: \"off\",\n          type: \"email\",\n          onChange: () => {\n            if (status === \"invalidEmail\") {\n              setStatus(null);\n            }\n          },\n          helperText: status === \"invalidEmail\" && \"This email address isn't associated with an account.\",\n          FormHelperTextProps: {\n            error: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VisibilityPasswordTextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          error: status === \"invalidPassword\",\n          label: \"Password\",\n          inputRef: loginPassword,\n          autoComplete: \"off\",\n          onChange: () => {\n            if (status === \"invalidPassword\") {\n              setStatus(null);\n            }\n          },\n          helperText: status === \"invalidPassword\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Incorrect password. Try again, or click on\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"\\\"Forgot Password?\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), \" to reset it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this) : \"\",\n          FormHelperTextProps: {\n            error: true\n          },\n          onVisibilityChange: setIsPasswordVisible,\n          isVisible: isPasswordVisible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          className: classes.formControlLabel,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 24\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), status === \"verificationEmailSend\" ? /*#__PURE__*/_jsxDEV(HighlightedInformation, {\n          children: \"We have send instructions on how to reset your password to your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HighlightedInformation, {\n          children: [\"Email is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"test@web.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), \"Password is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"HaRzwc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: isLoading,\n          size: \"large\",\n          children: [\"Login\", isLoading && /*#__PURE__*/_jsxDEV(ButtonCircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          className: classNames(classes.forgotPassword, isLoading ? classes.disabledText : null),\n          color: \"primary\",\n          onClick: isLoading ? null : openChangePasswordDialog,\n          tabIndex: 0,\n          role: \"button\",\n          onKeyDown: event => {\n            // For screenreaders listen to space and enter events\n            if (!isLoading && event.keyCode === 13 || event.keyCode === 32) {\n              openChangePasswordDialog();\n            }\n          },\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginDialog, \"am2BUmTVhf0yrPW6vjoo6ki9pDQ=\");\n\n_c = LoginDialog;\nLoginDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  openChangePasswordDialog: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  status: PropTypes.string\n};\nexport default withRouter(withStyles(styles)(LoginDialog));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginDialog\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/register_login/LoginDialog.js"],"names":["React","useState","useCallback","useRef","Fragment","PropTypes","classNames","withRouter","TextField","Button","Checkbox","Typography","FormControlLabel","withStyles","FormDialog","HighlightedInformation","ButtonCircularProgress","VisibilityPasswordTextField","styles","theme","forgotPassword","marginTop","spacing","color","palette","primary","main","cursor","dark","disabledText","text","disabled","formControlLabel","marginRight","LoginDialog","props","setStatus","history","classes","onClose","openChangePasswordDialog","status","isLoading","setIsLoading","isPasswordVisible","setIsPasswordVisible","loginEmail","loginPassword","login","current","value","setTimeout","push","e","preventDefault","error","event","keyCode","propTypes","object","isRequired","func","string"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Typography,\n  FormControlLabel,\n  withStyles,\n} from \"@material-ui/core\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\n\nconst styles = (theme) => ({\n  forgotPassword: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n    \"&:enabled:hover\": {\n      color: theme.palette.primary.dark,\n    },\n    \"&:enabled:focus\": {\n      color: theme.palette.primary.dark,\n    },\n  },\n  disabledText: {\n    cursor: \"auto\",\n    color: theme.palette.text.disabled,\n  },\n  formControlLabel: {\n    marginRight: 0,\n  },\n});\n\nfunction LoginDialog(props) {\n  const {\n    setStatus,\n    history,\n    classes,\n    onClose,\n    openChangePasswordDialog,\n    status,\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const loginEmail = useRef();\n  const loginPassword = useRef();\n\n  const login = useCallback(() => {\n    setIsLoading(true);\n    setStatus(null);\n    if (loginEmail.current.value !== \"test@web.com\") {\n      setTimeout(() => {\n        setStatus(\"invalidEmail\");\n        setIsLoading(false);\n      }, 1500);\n    } else if (loginPassword.current.value !== \"HaRzwc\") {\n      setTimeout(() => {\n        setStatus(\"invalidPassword\");\n        setIsLoading(false);\n      }, 1500);\n    } else {\n      setTimeout(() => {\n        history.push(\"/c/dashboard\");\n      }, 150);\n    }\n  }, [setIsLoading, loginEmail, loginPassword, history, setStatus]);\n\n  return (\n    <Fragment>\n      <FormDialog\n        open\n        onClose={onClose}\n        loading={isLoading}\n        onFormSubmit={(e) => {\n          e.preventDefault();\n          login();\n        }}\n        hideBackdrop\n        headline=\"Login\"\n        content={\n          <Fragment>\n            <TextField\n              margin=\"normal\"\n              error={status === \"invalidEmail\"}\n              required\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Email Address\"\n              inputRef={loginEmail}\n              autoFocus\n              autoComplete=\"off\"\n              type=\"email\"\n              onChange={() => {\n                if (status === \"invalidEmail\") {\n                  setStatus(null);\n                }\n              }}\n              helperText={\n                status === \"invalidEmail\" &&\n                \"This email address isn't associated with an account.\"\n              }\n              FormHelperTextProps={{ error: true }}\n            />\n            <VisibilityPasswordTextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              error={status === \"invalidPassword\"}\n              label=\"Password\"\n              inputRef={loginPassword}\n              autoComplete=\"off\"\n              onChange={() => {\n                if (status === \"invalidPassword\") {\n                  setStatus(null);\n                }\n              }}\n              helperText={\n                status === \"invalidPassword\" ? (\n                  <span>\n                    Incorrect password. Try again, or click on{\" \"}\n                    <b>&quot;Forgot Password?&quot;</b> to reset it.\n                  </span>\n                ) : (\n                  \"\"\n                )\n              }\n              FormHelperTextProps={{ error: true }}\n              onVisibilityChange={setIsPasswordVisible}\n              isVisible={isPasswordVisible}\n            />\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={<Checkbox color=\"primary\" />}\n              label={<Typography variant=\"body1\">Remember me</Typography>}\n            />\n            {status === \"verificationEmailSend\" ? (\n              <HighlightedInformation>\n                We have send instructions on how to reset your password to your\n                email address\n              </HighlightedInformation>\n            ) : (\n              <HighlightedInformation>\n                Email is: <b>test@web.com</b>\n                <br />\n                Password is: <b>HaRzwc</b>\n              </HighlightedInformation>\n            )}\n          </Fragment>\n        }\n        actions={\n          <Fragment>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={isLoading}\n              size=\"large\"\n            >\n              Login\n              {isLoading && <ButtonCircularProgress />}\n            </Button>\n            <Typography\n              align=\"center\"\n              className={classNames(\n                classes.forgotPassword,\n                isLoading ? classes.disabledText : null\n              )}\n              color=\"primary\"\n              onClick={isLoading ? null : openChangePasswordDialog}\n              tabIndex={0}\n              role=\"button\"\n              onKeyDown={(event) => {\n                // For screenreaders listen to space and enter events\n                if (\n                  (!isLoading && event.keyCode === 13) ||\n                  event.keyCode === 32\n                ) {\n                  openChangePasswordDialog();\n                }\n              }}\n            >\n              Forgot Password?\n            </Typography>\n          </Fragment>\n        }\n      />\n    </Fragment>\n  );\n}\n\nLoginDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  openChangePasswordDialog: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  status: PropTypes.string,\n};\n\nexport default withRouter(withStyles(styles)(LoginDialog));\n"]},"metadata":{},"sourceType":"module"}