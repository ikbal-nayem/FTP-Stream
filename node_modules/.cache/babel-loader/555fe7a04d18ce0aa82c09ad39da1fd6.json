{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/shared/components/ImageCropperDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, DialogActions, Button, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  dialogPaper: {\n    maxWidth: `${theme.breakpoints.values.md}px !important`\n  },\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  }\n});\n\nfunction ImageCropperDialog(props) {\n  _s();\n\n  const {\n    ImageCropper,\n    classes,\n    onClose,\n    open,\n    src,\n    onCrop,\n    aspectRatio,\n    theme\n  } = props;\n  const [crop, setCrop] = useState(null);\n  const getCropFunctionFromChild = useCallback(cropFunction => {\n    setCrop(() => cropFunction);\n  }, [setCrop]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onEscapeKeyDown: onClose,\n    classes: {\n      paper: classes.dialogPaper\n    },\n    style: {\n      overflowX: \"visible\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(ImageCropper, {\n        src: src,\n        setCropFunction: getCropFunctionFromChild,\n        onCrop: onCrop,\n        aspectRatio: aspectRatio,\n        color: theme.palette.primary.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: crop,\n        children: \"Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageCropperDialog, \"R/azeZpz16wKfAObbxm9V6xZgDM=\");\n\n_c = ImageCropperDialog;\nImageCropperDialog.propTypes = {\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onCrop: PropTypes.func.isRequired,\n  src: PropTypes.string,\n  aspectRatio: PropTypes.number\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(ImageCropperDialog);\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageCropperDialog\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/shared/components/ImageCropperDialog.js"],"names":["React","useState","useCallback","PropTypes","Dialog","DialogContent","DialogActions","Button","Box","withStyles","styles","theme","dialogPaper","maxWidth","breakpoints","values","md","dialogContent","paddingTop","spacing","paddingRight","paddingLeft","ImageCropperDialog","props","ImageCropper","classes","onClose","open","src","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","paper","overflowX","palette","primary","main","propTypes","elementType","object","isRequired","func","bool","string","number","withTheme"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,UANF,QAOO,mBAPP;;AASA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,QAAQ,EAAG,GAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBC,EAAG;AAA3C,GADY;AAEzBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADC;AAEbC,IAAAA,YAAY,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd,CAFD;AAGbE,IAAAA,WAAW,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHA;AAFU,CAAZ,CAAf;;AASA,SAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AACjC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,GALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,WAPI;AAQJnB,IAAAA;AARI,MASFY,KATJ;AAUA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMgC,wBAAwB,GAAG/B,WAAW,CACzCgC,YAAD,IAAkB;AAChBF,IAAAA,OAAO,CAAC,MAAME,YAAP,CAAP;AACD,GAHyC,EAI1C,CAACF,OAAD,CAJ0C,CAA5C;AAOA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,eAAe,EAAED,OAFnB;AAGE,IAAA,OAAO,EAAE;AAAES,MAAAA,KAAK,EAAEV,OAAO,CAACb;AAAjB,KAHX;AAIE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAJT;AAAA,4BAME,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEX,OAAO,CAACR,aAAlC;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,GAAG,EAAEW,GADP;AAEE,QAAA,eAAe,EAAEK,wBAFnB;AAGE,QAAA,MAAM,EAAEJ,MAHV;AAIE,QAAA,WAAW,EAAEC,WAJf;AAKE,QAAA,KAAK,EAAEnB,KAAK,CAAC0B,OAAN,CAAcC,OAAd,CAAsBC;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAeE,QAAC,aAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEb,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAEK,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA9CQT,kB;;KAAAA,kB;AAgDTA,kBAAkB,CAACkB,SAAnB,GAA+B;AAC7BhB,EAAAA,YAAY,EAAErB,SAAS,CAACsC,WADK;AAE7BhB,EAAAA,OAAO,EAAEtB,SAAS,CAACuC,MAAV,CAAiBC,UAFG;AAG7BjB,EAAAA,OAAO,EAAEvB,SAAS,CAACyC,IAAV,CAAeD,UAHK;AAI7BhB,EAAAA,IAAI,EAAExB,SAAS,CAAC0C,IAAV,CAAeF,UAJQ;AAK7Bd,EAAAA,MAAM,EAAE1B,SAAS,CAACyC,IAAV,CAAeD,UALM;AAM7Bf,EAAAA,GAAG,EAAEzB,SAAS,CAAC2C,MANc;AAO7BhB,EAAAA,WAAW,EAAE3B,SAAS,CAAC4C;AAPM,CAA/B;AAUA,eAAetC,UAAU,CAACC,MAAD,EAAS;AAAEsC,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwC1B,kBAAxC,CAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n});\n\nfunction ImageCropperDialog(props) {\n  const {\n    ImageCropper,\n    classes,\n    onClose,\n    open,\n    src,\n    onCrop,\n    aspectRatio,\n    theme,\n  } = props;\n  const [crop, setCrop] = useState(null);\n\n  const getCropFunctionFromChild = useCallback(\n    (cropFunction) => {\n      setCrop(() => cropFunction);\n    },\n    [setCrop]\n  );\n\n  return (\n    <Dialog\n      open={open}\n      onEscapeKeyDown={onClose}\n      classes={{ paper: classes.dialogPaper }}\n      style={{ overflowX: \"visible\" }}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <ImageCropper\n          src={src}\n          setCropFunction={getCropFunctionFromChild}\n          onCrop={onCrop}\n          aspectRatio={aspectRatio}\n          color={theme.palette.primary.main}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Box mr={1}>\n          <Button onClick={onClose}>Close</Button>\n        </Box>\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\n          Crop\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nImageCropperDialog.propTypes = {\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onCrop: PropTypes.func.isRequired,\n  src: PropTypes.string,\n  aspectRatio: PropTypes.number,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\n"]},"metadata":{},"sourceType":"module"}