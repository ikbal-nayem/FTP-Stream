{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/posts/AddPostOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, FormControl, Select, OutlinedInput, MenuItem, Box, withStyles } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\n\nconst styles = theme => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120\n    }\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  },\n  imgWrapper: {\n    position: \"relative\"\n  },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: theme.shape.borderRadius,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  },\n  numberInput: {\n    width: 110\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\"\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1\n  },\n  dNone: {\n    display: \"none\"\n  }\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  _s();\n\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    ImageCropper,\n    DateTimePicker,\n    cropperFile,\n    onCrop,\n    onCropperClose,\n    uploadAt,\n    onChangeUploadAt\n  } = props;\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case \"option1\":\n        setOption1(value);\n        break;\n\n      case \"option2\":\n        setOption2(value);\n        break;\n\n      case \"option3\":\n        setOption3(value);\n        break;\n\n      case \"option4\":\n        setOption4(value);\n        break;\n\n      default:\n        throw new Error(\"No branch selected in switch-statement.\");\n    }\n  }, [setOption1, setOption2, setOption3, setOption4]);\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imgWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"uploaded item\",\n          src: files[0].preview,\n          className: classes.img,\n          style: {\n            height: 148\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.floatButtonWrapper,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: deleteItem,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      accept: \"image/png, image/jpeg\",\n      onDrop: onDrop,\n      fullHeight: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.uploadText,\n        children: [\"Click / Drop file \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), \" here\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }, [onDrop, files, classes, deleteItem]);\n  const inputs = [{\n    state: option1,\n    label: \"Option 1\",\n    stateName: \"option1\"\n  }, {\n    state: option2,\n    label: \"Option 2\",\n    stateName: \"option2\"\n  }, {\n    state: option3,\n    label: \"Option 3\",\n    stateName: \"option3\"\n  }, {\n    state: option4,\n    label: \"Option 4\",\n    stateName: \"option4\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [ImageCropper && /*#__PURE__*/_jsxDEV(ImageCropperDialog, {\n      open: cropperFile ? true : false,\n      ImageCropper: ImageCropper,\n      src: cropperFile ? cropperFile.preview : \"\",\n      onCrop: onCrop,\n      onClose: onCropperClose,\n      aspectRatio: 4 / 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      paragraph: true,\n      variant: \"h6\",\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: EmojiTextArea && /*#__PURE__*/_jsxDEV(EmojiTextArea, {\n        inputClassName: classes.emojiTextArea,\n        maxCharacters: 2200,\n        rightContent: printFile(),\n        emojiSet: \"google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      paragraph: true,\n      variant: \"h6\",\n      children: \"Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: /*#__PURE__*/_jsxDEV(Bordered, {\n        disableVerticalPadding: true,\n        disableBorderRadius: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          disableGutters: true,\n          className: \"listItemLeftPadding\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Upload at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: DateTimePicker && /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              value: uploadAt,\n              format: \"yyyy/MM/dd hh:mm a\",\n              onChange: onChangeUploadAt,\n              disablePast: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), inputs.map((element, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"listItemLeftPadding\",\n          disableGutters: true,\n          divider: index !== inputs.length - 1,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: element.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: element.state,\n                onChange: handleChange,\n                input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  name: element.stateName,\n                  labelWidth: 0,\n                  className: classes.numberInput,\n                  classes: {\n                    input: classes.numberInputInput\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this),\n                MenuProps: {\n                  disableScrollLock: true\n                },\n                children: inputOptions.map(innerElement => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: innerElement,\n                  children: innerElement\n                }, innerElement, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPostOptions, \"Y/ZXvEfvJzpCuryccbWuT17gBLo=\");\n\n_c = AddPostOptions;\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  onCrop: PropTypes.func,\n  onCropperClose: PropTypes.func,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AddPostOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostOptions\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_in/components/posts/AddPostOptions.js"],"names":["React","Fragment","useState","useCallback","PropTypes","Typography","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","FormControl","Select","OutlinedInput","MenuItem","Box","withStyles","CloseIcon","Bordered","ImageCropperDialog","styles","theme","floatButtonWrapper","position","top","spacing","right","zIndex","inputRoot","width","uploadIcon","fontSize","transition","transitions","create","duration","short","easing","easeInOut","imgWrapper","img","border","borderRadius","shape","borderTopLeftRadius","borderBottomLeftRadius","uploadText","numberInput","numberInputInput","padding","emojiTextArea","borderTopRightRadius","borderBottomRightRadius","marginRight","dNone","display","inputOptions","AddPostOptions","props","Dropzone","classes","files","deleteItem","onDrop","EmojiTextArea","ImageCropper","DateTimePicker","cropperFile","onCrop","onCropperClose","uploadAt","onChangeUploadAt","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","handleChange","event","name","value","target","Error","printFile","preview","height","inputs","state","label","stateName","map","element","index","length","input","disableScrollLock","innerElement","propTypes","onEmojiTextareaChange","func","elementType","object","arrayOf","isRequired","string","characters","number","instanceOf","Date","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\n\nconst styles = (theme) => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000,\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160,\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140,\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120,\n    },\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  imgWrapper: { position: \"relative\" },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: theme.shape.borderRadius,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1,\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    ImageCropper,\n    DateTimePicker,\n    cropperFile,\n    onCrop,\n    onCropperClose,\n    uploadAt,\n    onChangeUploadAt,\n  } = props;\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      switch (name) {\n        case \"option1\":\n          setOption1(value);\n          break;\n        case \"option2\":\n          setOption2(value);\n          break;\n        case \"option3\":\n          setOption3(value);\n          break;\n        case \"option4\":\n          setOption4(value);\n          break;\n        default:\n          throw new Error(\"No branch selected in switch-statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4]\n  );\n\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return (\n        <div className={classes.imgWrapper}>\n          <img\n            alt=\"uploaded item\"\n            src={files[0].preview}\n            className={classes.img}\n            style={{ height: 148 }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={deleteItem}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\n        <span className={classes.uploadText}>\n          Click / Drop file <br /> here\n        </span>\n      </Dropzone>\n    );\n  }, [onDrop, files, classes, deleteItem]);\n\n  const inputs = \n    [\n      {\n        state: option1,\n        label: \"Option 1\",\n        stateName: \"option1\",\n      },\n      {\n        state: option2,\n        label: \"Option 2\",\n        stateName: \"option2\",\n      },\n      {\n        state: option3,\n        label: \"Option 3\",\n        stateName: \"option3\",\n      },\n      {\n        state: option4,\n        label: \"Option 4\",\n        stateName: \"option4\",\n      },\n    ];\n\n  return (\n    <Fragment>\n      {ImageCropper && (\n        <ImageCropperDialog\n          open={cropperFile ? true : false}\n          ImageCropper={ImageCropper}\n          src={cropperFile ? cropperFile.preview : \"\"}\n          onCrop={onCrop}\n          onClose={onCropperClose}\n          aspectRatio={4 / 3}\n        />\n      )}\n      <Typography paragraph variant=\"h6\">\n        Upload Image\n      </Typography>\n      <Box mb={2}>\n        {EmojiTextArea && (\n          <EmojiTextArea\n            inputClassName={classes.emojiTextArea}\n            maxCharacters={2200}\n            rightContent={printFile()}\n            emojiSet=\"google\"\n          />\n        )}\n      </Box>\n      <Typography paragraph variant=\"h6\">\n        Options\n      </Typography>\n      <List disablePadding>\n        <Bordered disableVerticalPadding disableBorderRadius>\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\n            <ListItemText>\n              <Typography variant=\"body2\">Upload at</Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              {DateTimePicker && (\n                <DateTimePicker\n                  value={uploadAt}\n                  format=\"yyyy/MM/dd hh:mm a\"\n                  onChange={onChangeUploadAt}\n                  disablePast\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n          {inputs.map((element, index) => (\n            <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n              divider={index !== inputs.length - 1}\n              key={index}\n            >\n              <ListItemText>\n                <Typography variant=\"body2\">{element.label}</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction>\n                  <Select\n                    value={element.state}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name={element.stateName}\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                    MenuProps={{ disableScrollLock: true }}\n                  >\n                    {inputOptions.map((innerElement) => (\n                      <MenuItem value={innerElement} key={innerElement}>\n                        {innerElement}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          ))}\n        </Bordered>\n      </List>\n    </Fragment>\n  );\n}\n\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  onCrop: PropTypes.func,\n  onCropperClose: PropTypes.func,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\n"]},"metadata":{},"sourceType":"module"}