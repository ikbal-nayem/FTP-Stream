{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/blog/BlogPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport format from \"date-fns/format\";\nimport { Grid, Typography, Card, Box, withStyles } from \"@material-ui/core\";\nimport BlogCard from \"./BlogCard\";\nimport ShareButton from \"../../../shared/components/ShareButton\";\nimport ZoomImage from \"../../../shared/components/ZoomImage\";\nimport smoothScrollTop from \"../../../shared/functions/smoothScrollTop\";\n\nconst styles = theme => ({\n  blogContentWrapper: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4)\n    },\n    maxWidth: 1280,\n    width: \"100%\"\n  },\n  wrapper: {\n    minHeight: \"60vh\"\n  },\n  img: {\n    width: \"100%\",\n    height: \"auto\"\n  },\n  card: {\n    boxShadow: theme.shadows[4]\n  }\n});\n\nfunction BlogPost(props) {\n  _s();\n\n  const {\n    classes,\n    date,\n    title,\n    src,\n    content,\n    otherArticles\n  } = props;\n  useEffect(() => {\n    document.title = `WaVer - ${title}`;\n    smoothScrollTop();\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classNames(\"lg-p-top\", classes.wrapper),\n    display: \"flex\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.blogContentWrapper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pt: 3,\n              pr: 3,\n              pl: 3,\n              pb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: format(new Date(date * 1000), \"PPP\", {\n                  awareOfUnicodeTokens: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ZoomImage, {\n              className: classes.img,\n              src: src,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              p: 3,\n              children: [content, /*#__PURE__*/_jsxDEV(Box, {\n                pt: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  spacing: 1,\n                  container: true,\n                  children: [\"Facebook\", \"Twitter\", \"Reddit\", \"Tumblr\"].map((type, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(ShareButton, {\n                      type: type,\n                      title: \"React SaaS Template\",\n                      description: \"I found an awesome template for an webapp using React!\",\n                      disableElevation: true,\n                      variant: \"contained\",\n                      className: \"text-white\",\n                      classes: {\n                        label: \"text-white\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            paragraph: true,\n            children: \"Other articles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), otherArticles.map(blogPost => /*#__PURE__*/_jsxDEV(Box, {\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(BlogCard, {\n              title: blogPost.title,\n              snippet: blogPost.snippet,\n              date: blogPost.date,\n              url: `${blogPost.url}${blogPost.params}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, blogPost.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = BlogPost;\nBlogPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  content: PropTypes.node.isRequired,\n  otherArticles: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(BlogPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"sources":["/home/iku/Dropbox/program/project/samonline/UI/src/logged_out/components/blog/BlogPost.js"],"names":["React","useEffect","PropTypes","classNames","format","Grid","Typography","Card","Box","withStyles","BlogCard","ShareButton","ZoomImage","smoothScrollTop","styles","theme","blogContentWrapper","marginLeft","spacing","marginRight","breakpoints","up","maxWidth","width","wrapper","minHeight","img","height","card","boxShadow","shadows","BlogPost","props","classes","date","title","src","content","otherArticles","document","Date","awareOfUnicodeTokens","map","type","index","label","blogPost","snippet","url","params","id","propTypes","object","isRequired","string","number","node","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport format from \"date-fns/format\";\nimport { Grid, Typography, Card, Box, withStyles } from \"@material-ui/core\";\nimport BlogCard from \"./BlogCard\";\nimport ShareButton from \"../../../shared/components/ShareButton\";\nimport ZoomImage from \"../../../shared/components/ZoomImage\";\nimport smoothScrollTop from \"../../../shared/functions/smoothScrollTop\";\n\nconst styles = (theme) => ({\n  blogContentWrapper: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(4),\n    },\n    maxWidth: 1280,\n    width: \"100%\",\n  },\n  wrapper: {\n    minHeight: \"60vh\",\n  },\n  img: {\n    width: \"100%\",\n    height: \"auto\",\n  },\n  card: {\n    boxShadow: theme.shadows[4],\n  },\n});\n\nfunction BlogPost(props) {\n  const { classes, date, title, src, content, otherArticles } = props;\n\n  useEffect(() => {\n    document.title = `WaVer - ${title}`;\n    smoothScrollTop();\n  }, [title]);\n\n  return (\n    <Box\n      className={classNames(\"lg-p-top\", classes.wrapper)}\n      display=\"flex\"\n      justifyContent=\"center\"\n    >\n      <div className={classes.blogContentWrapper}>\n        <Grid container spacing={5}>\n          <Grid item md={9}>\n            <Card className={classes.card}>\n              <Box pt={3} pr={3} pl={3} pb={2}>\n                <Typography variant=\"h4\">\n                  <b>{title}</b>\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  {format(new Date(date * 1000), \"PPP\", {\n                    awareOfUnicodeTokens: true,\n                  })}\n                </Typography>\n              </Box>\n              <ZoomImage className={classes.img} src={src} alt=\"\" />\n              <Box p={3}>\n                {content}\n                <Box pt={2}>\n                  <Grid spacing={1} container>\n                    {[\"Facebook\", \"Twitter\", \"Reddit\", \"Tumblr\"].map(\n                      (type, index) => (\n                        <Grid item key={index}>\n                          <ShareButton\n                            type={type}\n                            title=\"React SaaS Template\"\n                            description=\"I found an awesome template for an webapp using React!\"\n                            disableElevation\n                            variant=\"contained\"\n                            className=\"text-white\"\n                            classes={{\n                              label: \"text-white\",\n                            }}\n                          />\n                        </Grid>\n                      )\n                    )}\n                  </Grid>\n                </Box>\n              </Box>\n            </Card>\n          </Grid>\n          <Grid item md={3}>\n            <Typography variant=\"h6\" paragraph>\n              Other articles\n            </Typography>\n            {otherArticles.map((blogPost) => (\n              <Box key={blogPost.id} mb={3}>\n                <BlogCard\n                  title={blogPost.title}\n                  snippet={blogPost.snippet}\n                  date={blogPost.date}\n                  url={`${blogPost.url}${blogPost.params}`}\n                />\n              </Box>\n            ))}\n          </Grid>\n        </Grid>\n      </div>\n    </Box>\n  );\n}\n\nBlogPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  content: PropTypes.node.isRequired,\n  otherArticles: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(BlogPost);\n"]},"metadata":{},"sourceType":"module"}